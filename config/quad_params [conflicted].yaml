#--------------------------------------------------------------------------
# webot-bridge component parameters
/webotbridge:
  ros__parameters:
    # for error noise added to orientation measurements (rads)
    Sigma_roll: 0.0017453
    Sigma_pitch: 0.0017453
    Sigma_yaw: 0.001745
    # for error noise added to altitude measurements (m)
    Sigma_Alt: 0.05
    Base_location: [1.45, 7.54, 0.01] # Base location
    Sigma_rangetobase: 0.25  # for error noise added to range to base measurements (m)
#--------------------------------------------------------------------------
# Dataset component parameters
/control:
  ros__parameters:
    Control_plan_path: /home/rodrigo/RD/RESEARCH/RTSLAM/ros_sclam/control_plan.txt
    # slam_feedback: false -> webot state feedback,  true ->  slam state feedback
    Slam_feedback: true
    # proportional gains for control
    kp_x: 0.5
    kp_y: 0.5
    kp_z: 0.7
    kp_yaw: 0.7
    # Maximum/minimun allowed control signals
    maxControlSignal_xy: 0.5
    minControlSignal_xy: -0.5
    maxControlSignal_z: 0.25
    minControlSignal_z: -0.25
    maxControlSignal_yaw: 0.2
    minControlSignal_yaw: -0.2
    # control precision
    cp_x: 0.1
    cp_y: 0.1
    cp_z: 0.25  # 0.5
    cp_yaw: 0.047 # 0.087
    # Monocular camera intrinsic parameters
    Mono_cam_img_rows: 240
    Mono_cam_img_cols: 400
    Mono_cam_distortions: [0.0, 0.0, 0.0, 0.0, 0.00000]
    Mono_cam_cc_u: 200.00
    Mono_cam_cc_v: 120.00
    Mono_cam_fc_u: 200.0
    Mono_cam_fc_v: 200.0
    Mono_cam_alpha_c: 0.0
    # Mono_cam_2_robot_axis_a z->y->x intrinisic axis rotations for defining the orientation of the camera frame with respect to robot frame
    Mono_cam_2_robot_axis_x: 0.0
    Mono_cam_2_robot_axis_y: 0.0
    Mono_cam_2_robot_axis_z: 1.5707963268
    # Mono_cam_2_robot vector position (expresed in the robot frame)
    Mono_cam_2_robot_pos_x: 0.1
    Mono_cam_2_robot_pos_y: 0.0
    Mono_cam_2_robot_pos_z: 0.0
    # Overlapping parameters for exploration
    Explore_area_lambda_y: 0.25  #-0.5
    Rec_Home_lambda_y: -0.8        
    
#--------------------------------------------------------------------------
# Local slam component parameters    
/lslam:
  ros__parameters:
    Data_origin: webots
    # check x_vel_run_time has the same value for both de Dataset and the localslam component
    x_vel_run_time: 1.0
    Robot_state_size: 13    
    Prediction_model: noise_driven
    # Maximun frequency output of robot state in Hz. (Max_freq_output must be an integer > 10)
    Max_freq_output: 33
    Attitude_update: true
    Altitude_update: true
    Speed_update: false
    Visual_update: true
    GPS_update: false
    Ground_station_range_update: true
    # Robot initial conditions
    Robot_init_x: 0.0
    Robot_init_y: 0.0
    Robot_init_z: 0.0
    Robot_init_roll: 0.0
    Robot_init_pitch: 0.0
    Robot_init_yaw: 0.0
    # Speed_sensor_frame to robot_frame rotation matrix  colum-major
    Rot_spd_2_r: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]
    # range sensor
    Range_sensor_offset: 0.0 
    Range_sensor_max_range_pattern: 6.0
    Range_sensor_max_r_max: 1.75
    Range_sensor_max_range_operation: 6.0       
    # Prediction parameters
    Sigma_w: 0.1 
    # Sigma_a: 6.00     
    Sigma_a: 6.00   
    Tau_r: 1.0
    Tau_p: 100000000000000000.0
    # Updates sensor uncertanty parameters
    Sigma_att_update: 0.001
    Sigma_spd_update: 0.005
    Sigma_alt_update: 0.1
    #Sigma_cam_uv: 10.0
    Sigma_cam_uv: 10.0
    Sigma_cam_uv_anchors: 10.0
    Sigma_cam_initial_depth_range: 0.1
    Sigma_cam_initial_depth_WOrange: 0.2
    # -1 ->  change altitud (h) to down coordinates
    Alt_h_2_d: -1
    # features initialization method 
    Visual_init_feats_method: "undelayed_range"
    # ------ monocular camera parameters ----------------------------
    Mono_cam_frame_period: 0.033333
    # Mono_cam_2_robot_axis_a z->y->x intrinisic axis rotations for defining the orientation of the camera frame with respect to robot frame
    # Mono_cam_2_robot_axis_x: 0.785398
    Mono_cam_2_robot_axis_x: 0.0
    Mono_cam_2_robot_axis_y: 0.0
    Mono_cam_2_robot_axis_z: 1.5707963268
    # Mono_cam_2_robot vector position (expresed in the robot frame)
    Mono_cam_2_robot_pos_x: 0.1
    Mono_cam_2_robot_pos_y: 0.0
    Mono_cam_2_robot_pos_z: 0.0
    # Monocular camera intrinsic parameters
    Mono_cam_img_rows: 240
    Mono_cam_img_cols: 400
    Mono_cam_distortions: [0.0, 0.0, 0.0, 0.0, 0.0]
    Mono_cam_cc_u: 200.0
    Mono_cam_cc_v: 120.0
    Mono_cam_fc_u: 200.00
    Mono_cam_fc_v: 200.00
    Mono_cam_alpha_c: 0.0
    # visual detection and tracking parameters    
    Images_number_candidate_points_detected: 50
    Images_minimun_distance_new_points: 10
    Images_half_patch_size_when_initialized: 20
    Images_half_patch_size_when_matching: 6
    Images_max_innov_pixels: 50
    # For deleting feats and anchors
    Visual_delete_Maximun_number_feats_allowed: 200
    Visual_delete_Maximun_number_anchors_allowed: 200
    Visual_delete_minimun_feats_in_state_before_delete: 50    
    Visual_delete_minimun_RatioMatched: 0.3    
    # visual update parameters
    Visual_update_use_1RANSAC_for_validation: true
    Visual_update_attitude_update: false
    # If there is not speed measurements, "Visual_update_min_vel_for_update_feats" must be whichever negative value 
    Visual_update_min_vel_for_update_feats: -0.02
    Visual_update_use_anchors: true
    # uncertainty_depth_anchor_init: the smaller value the more the uncertanty has to converged to initialize the anchor
    Visual_update_uncertainty_depth_anchor_init: 0.08
    # parameters for selecting Keyframes
    Select_KeyFrames_min_n_frames_between_kf: 5
    Select_KeyFrames_min_n_matches: 5
    Select_KeyFrames_min_ratio_distance_depth: 0.15
    # Position update from the (local) Bundle adjustment carried out by the global slam
    GS_xy_update: true
    GS_z_update: false
    GS_xy_update_max_delta: 0.1
    GS_z_update_max_delta: 0.1
    # Position update from the close loop process carried out by the global slam
    CL_xy_update: true
    CL_z_update: false
    CL_xy_update_max_delta: 15.0
    CL_z_update_max_delta: 1.0
    # Robot x-y uncertainty (used for exploration home area)
    CL_Sigma_x: 0.2
    CL_Sigma_y: 0.2   
    CL_min_vel_cl_uncertainty_update: 0.05
    CL_Compute_Cp_from_start: false
    # Activate/Deactivate statistics 
    Stats: true      
#--------------------------------------------------------------------------
# Plot component parameters         
/plot:
  ros__parameters:
    Viewer_width: 1200
    Viewer_height: 800
    Cam_distance: 95.0
    Cam_pos_init_x: 12.0
    Cam_pos_init_y: 0.0
    Cam_pos_init_z: 0.0
    Cam_zoom_delta: 1.0
    Cam_move_delta: 0.5
    Draw_local_slam_trajectory: true
    Draw_actual_trayectory: true
    Plot_local_map: true
    Plot_global_map: true
    # If PLot_actual_cam_pos = true, plots the camera using the position and rotation provided by the local slam component
    Robot_type: "quad"
    Plot_actual_cam_pos: true
    Robot_cam_pos_x: 0.1
    Robot_cam_pos_y: 0.0
    Robot_cam_pos_z: 0.05
    # z->y->x intrinisic axis rotations for defining the orientation of the camera frame with respect to robot frame
    Robot_cam_axis_x: 0.785398
    Robot_cam_axis_y: 0.0
    Robot_cam_axis_z: 1.5707963268
#--------------------------------------------------------------------------
# Global slam component parameters     
/gslam:
  ros__parameters:
    # Monocular camera intrinsic parameters
    Mono_cam_img_rows: 240
    Mono_cam_img_cols: 400
    Mono_cam_distortions: [0.0, 0.0, 0.0, 0.0, 0.00000]
    Mono_cam_cc_u: 200.00
    Mono_cam_cc_v: 120.00
    Mono_cam_fc_u: 200.0
    Mono_cam_fc_v: 200.0
    Mono_cam_alpha_c: 0.0
    # Initialization of global map points (anchors)
    # A high value of "Init_number_candidate_points_per_kf" can cause a malloc crash
    Init_use_anms_for_select_strong_points: true
    Init_anms_tolerance: 0.3      
    Init_number_candidate_points_per_kf: 1000 #2500
    Init_min_distance_to_previous_mapped_features: 1
    Init_min_depth_to_consider: .2
    # visual match
    VM_max_inov_error: 30
    # Visibility graph
    VG_img_search_margin: 15
    # Delele points
    Delete_min_kf_matched_for_keep_anchor: 3
    # ------Bundle Adjusment----------------------------------------------------------
    # Local Bundle adjusment can close "small trajectory loops"!
    # The different combination of parameter values "BA_max_n_previous_kf_for_search_matches", "BA_max_n_kf_optimized" and  
    # "BA_min_n_latest_kf_to_optimize" will define the behaviour for small loop closure
    # ---------
    # "BA_max_n_previous_kf_for_search_matches" set the maximun number of previous kf to consider for searching matches, 
    # set the number to high can affect the gmap real-time performance
    BA_max_n_previous_kf_for_search_matches: 20
    # "BA_max_n_kf_optimized" set the maximun window size for local Bundle Adjusment
    BA_max_n_kf_optimized: 10
    # "BA_min_n_latest_kf_to_optimize" set the minimun number of previous kf, respect to the latest one, 
    # that are considered in local-BA. It must be less or equal "BA_max_n_kf_optimized".
    # The difference between "BA_max_n_kf_optimized" and "BA_min_n_latest_kf_to_optimize" is the number of oldest visually linked kf,
    # that the local-BA will try to include.   
    BA_min_n_latest_kf_to_optimize: 7
    # Uncertanty noise parameters used for BA
    BA_sigma_uv: 1.0
    BA_sigma_kf_att: 0.001
    BA_sigma_kf_xy: 0.05
    BA_sigma_kf_z: 0.05
    BA_sigma_kf_pt: 0.3
    BA_update_kf_pos: true
    BA_update_kf_att: true
    BA_update_map: true
    # Used for not considering norm|delta_pos| obtained from BA bigger than "BA_max_delta_kf_pos" (m)
    BA_max_delta_kf_pos: 1.75
    # Every GM_factor_anchors_sent_to_plot an anchor of the GM is sent to the plot module,e.g. a value of 1 plot all anchors
    GM_factor_anchors_sent_to_plot: 10
    #------ Close loop --------------------------------------------------------
    #
    # "CL_min_n_not_vl_kf": minimun number of consecutive non visually linked kf before searching for potential loop closures
    CL_min_n_not_vl_kf: 10
    # "CL_min_n_matches": minumun number of matches with mapped points to consider a close loop 
    CL_min_n_matches: 40
    # "CL_min_mean_reprojection_error" is used as treshold for the reprojection test used for validating the PnP pose.
    # The bigger de value the most permisive is the test (more loops are detected), but the computed pose can be less accurate.
    CL_min_mean_reprojection_error: 70.0
    CL_xy_update_max_delta: 6.0
    # Noise
    CL_odo_sigma_kf_att: 0.0001
    CL_odo_sigma_kf_xy: 0.05
    CL_odo_sigma_kf_z: 0.05
    CL_clo_sigma_kf_att: 0.00001
    # CL_clo_sigma_kf_xy: 0.005
    CL_clo_sigma_kf_xy: 0.0005
    CL_clo_sigma_kf_z: 0.005
    CL_update_z: false
    # Use robot uncertainty in x-y pose for looking for previous mapped areas
    CL_use_robot_uncertainty: true
    CL_use_only_home_kf: true
    # For using an Aruco tag for CL  
    CL_tag_max_xy_dis: 6.0
    CL_tag_max_xy_dis_px: 90
    # Activate/Deactivate statistics 
    Stats: true  
    
    


    

    
